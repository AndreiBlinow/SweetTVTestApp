//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: movie_service.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import GRPC
import NIO
import SwiftProtobuf


/// Usage: instantiate `MovieService_MovieServiceClient`, then call methods of this protocol to make API calls.
internal protocol MovieService_MovieServiceClientProtocol: GRPCClient {
  var serviceName: String { get }
  var interceptors: MovieService_MovieServiceClientInterceptorFactoryProtocol? { get }

  func getPromoBanners(
    _ request: MovieService_GetPromoBannersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetPromoBannersRequest, MovieService_GetPromoBannersResponse>

  func getPremiereBanners(
    _ request: MovieService_GetPremiereBannersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetPremiereBannersRequest, MovieService_GetPremiereBannersResponse>

  func getGenreMovies(
    _ request: MovieService_GetGenreMoviesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetGenreMoviesRequest, MovieService_GetGenreMoviesResponse>

  func getSubgenreMovies(
    _ request: MovieService_GetSubgenreMoviesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetSubgenreMoviesRequest, MovieService_GetSubgenreMoviesResponse>

  func getMovieInfo(
    _ request: MovieService_GetMovieInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetMovieInfoRequest, MovieService_GetMovieInfoResponse>

  func getLink(
    _ request: MovieService_GetLinkRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetLinkRequest, MovieService_GetLinkResponse>

  func getPremiereMovies(
    _ request: MovieService_GetPremiereMoviesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetPremiereMoviesRequest, MovieService_GetPremiereMoviesResponse>

  func getPurchasedMovies(
    _ request: MovieService_GetPurchasedMoviesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetPurchasedMoviesRequest, MovieService_GetPurchasedMoviesResponse>

  func getConfiguration(
    _ request: MovieService_GetConfigurationRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetConfigurationRequest, MovieService_GetConfigurationResponse>

  func getRecommendedMovies(
    _ request: MovieService_GetRecommendedMoviesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetRecommendedMoviesRequest, MovieService_GetRecommendedMoviesResponse>

  func getCollectionMovies(
    _ request: MovieService_GetCollectionMoviesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetCollectionMoviesRequest, MovieService_GetCollectionMoviesResponse>

  func getWatchList(
    _ request: MovieService_GetWatchListRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetWatchListRequest, MovieService_GetWatchListResponse>

  func setWatchInfo(
    _ request: MovieService_SetWatchInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_SetWatchInfoRequest, MovieService_SetWatchInfoResponse>

  func clearWatchInfo(
    _ request: MovieService_ClearWatchInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_ClearWatchInfoRequest, MovieService_ClearWatchInfoResponse>

  func getFavoriteMovies(
    _ request: MovieService_GetFavoriteMoviesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetFavoriteMoviesRequest, MovieService_GetFavoriteMoviesResponse>

  func getPersonInfo(
    _ request: MovieService_GetPersonInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetPersonInfoRequest, MovieService_GetPersonInfoResponse>

  func getPersonsInfo(
    _ request: MovieService_GetPersonsInfoRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetPersonsInfoRequest, MovieService_GetPersonsInfoResponse>

  func getDownloadableMovies(
    _ request: MovieService_GetDownloadableMoviesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetDownloadableMoviesRequest, MovieService_GetDownloadableMoviesResponse>

  func rate(
    _ request: MovieService_RateRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_RateRequest, MovieService_RateResponse>

  func getCollections(
    _ request: MovieService_GetCollectionsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetCollectionsRequest, MovieService_GetCollectionsResponse>

  func addFavoriteMovie(
    _ request: MovieService_AddFavoriteMovieRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_AddFavoriteMovieRequest, MovieService_AddFavoriteMovieResponse>

  func removeFavoriteMovie(
    _ request: MovieService_RemoveFavoriteMovieRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_RemoveFavoriteMovieRequest, MovieService_RemoveFavoriteMovieResponse>

  func postComment(
    _ request: MovieService_PostCommentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_PostCommentRequest, MovieService_PostCommentResponse>

  func editComment(
    _ request: MovieService_EditCommentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_EditCommentRequest, MovieService_EditCommentResponse>

  func deleteComment(
    _ request: MovieService_DeleteCommentRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_DeleteCommentRequest, MovieService_DeleteCommentResponse>

  func getFilters(
    _ request: MovieService_GetFiltersRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetFiltersRequest, MovieService_GetFiltersResponse>

  func getFilteredMovies(
    _ request: MovieService_GetFilteredMoviesRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetFilteredMoviesRequest, MovieService_GetFilteredMoviesResponse>

  func getFilterOption(
    _ request: MovieService_GetFilterOptionRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetFilterOptionRequest, MovieService_GetFilterOptionResponse>

  func notifyMovieRelease(
    _ request: MovieService_NotifyMovieReleaseRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_NotifyMovieReleaseRequest, MovieService_NotifyMovieReleaseResponse>

  func getRecommendations(
    _ request: MovieService_GetRecommendationsRequest,
    callOptions: CallOptions?
  ) -> UnaryCall<MovieService_GetRecommendationsRequest, MovieService_GetRecommendationsResponse>
}

extension MovieService_MovieServiceClientProtocol {
  internal var serviceName: String {
    return "movie_service.MovieService"
  }

  /// Unary call to GetPromoBanners
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPromoBanners.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPromoBanners(
    _ request: MovieService_GetPromoBannersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetPromoBannersRequest, MovieService_GetPromoBannersResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetPromoBanners",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPromoBannersInterceptors() ?? []
    )
  }

  /// Unary call to GetPremiereBanners
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPremiereBanners.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPremiereBanners(
    _ request: MovieService_GetPremiereBannersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetPremiereBannersRequest, MovieService_GetPremiereBannersResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetPremiereBanners",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPremiereBannersInterceptors() ?? []
    )
  }

  /// Unary call to GetGenreMovies
  ///
  /// - Parameters:
  ///   - request: Request to send to GetGenreMovies.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getGenreMovies(
    _ request: MovieService_GetGenreMoviesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetGenreMoviesRequest, MovieService_GetGenreMoviesResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetGenreMovies",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetGenreMoviesInterceptors() ?? []
    )
  }

  /// Unary call to GetSubgenreMovies
  ///
  /// - Parameters:
  ///   - request: Request to send to GetSubgenreMovies.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getSubgenreMovies(
    _ request: MovieService_GetSubgenreMoviesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetSubgenreMoviesRequest, MovieService_GetSubgenreMoviesResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetSubgenreMovies",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetSubgenreMoviesInterceptors() ?? []
    )
  }

  /// Unary call to GetMovieInfo
  ///
  /// - Parameters:
  ///   - request: Request to send to GetMovieInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getMovieInfo(
    _ request: MovieService_GetMovieInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetMovieInfoRequest, MovieService_GetMovieInfoResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetMovieInfo",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetMovieInfoInterceptors() ?? []
    )
  }

  /// Unary call to GetLink
  ///
  /// - Parameters:
  ///   - request: Request to send to GetLink.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getLink(
    _ request: MovieService_GetLinkRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetLinkRequest, MovieService_GetLinkResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetLink",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetLinkInterceptors() ?? []
    )
  }

  /// Unary call to GetPremiereMovies
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPremiereMovies.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPremiereMovies(
    _ request: MovieService_GetPremiereMoviesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetPremiereMoviesRequest, MovieService_GetPremiereMoviesResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetPremiereMovies",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPremiereMoviesInterceptors() ?? []
    )
  }

  /// Unary call to GetPurchasedMovies
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPurchasedMovies.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPurchasedMovies(
    _ request: MovieService_GetPurchasedMoviesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetPurchasedMoviesRequest, MovieService_GetPurchasedMoviesResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetPurchasedMovies",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPurchasedMoviesInterceptors() ?? []
    )
  }

  /// Unary call to GetConfiguration
  ///
  /// - Parameters:
  ///   - request: Request to send to GetConfiguration.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getConfiguration(
    _ request: MovieService_GetConfigurationRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetConfigurationRequest, MovieService_GetConfigurationResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetConfiguration",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetConfigurationInterceptors() ?? []
    )
  }

  /// Unary call to GetRecommendedMovies
  ///
  /// - Parameters:
  ///   - request: Request to send to GetRecommendedMovies.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getRecommendedMovies(
    _ request: MovieService_GetRecommendedMoviesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetRecommendedMoviesRequest, MovieService_GetRecommendedMoviesResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetRecommendedMovies",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRecommendedMoviesInterceptors() ?? []
    )
  }

  /// Unary call to GetCollectionMovies
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCollectionMovies.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getCollectionMovies(
    _ request: MovieService_GetCollectionMoviesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetCollectionMoviesRequest, MovieService_GetCollectionMoviesResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetCollectionMovies",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCollectionMoviesInterceptors() ?? []
    )
  }

  /// Unary call to GetWatchList
  ///
  /// - Parameters:
  ///   - request: Request to send to GetWatchList.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getWatchList(
    _ request: MovieService_GetWatchListRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetWatchListRequest, MovieService_GetWatchListResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetWatchList",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetWatchListInterceptors() ?? []
    )
  }

  /// Unary call to SetWatchInfo
  ///
  /// - Parameters:
  ///   - request: Request to send to SetWatchInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func setWatchInfo(
    _ request: MovieService_SetWatchInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_SetWatchInfoRequest, MovieService_SetWatchInfoResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/SetWatchInfo",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeSetWatchInfoInterceptors() ?? []
    )
  }

  /// Unary call to ClearWatchInfo
  ///
  /// - Parameters:
  ///   - request: Request to send to ClearWatchInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func clearWatchInfo(
    _ request: MovieService_ClearWatchInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_ClearWatchInfoRequest, MovieService_ClearWatchInfoResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/ClearWatchInfo",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeClearWatchInfoInterceptors() ?? []
    )
  }

  /// Unary call to GetFavoriteMovies
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFavoriteMovies.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getFavoriteMovies(
    _ request: MovieService_GetFavoriteMoviesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetFavoriteMoviesRequest, MovieService_GetFavoriteMoviesResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetFavoriteMovies",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFavoriteMoviesInterceptors() ?? []
    )
  }

  /// Unary call to GetPersonInfo
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPersonInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPersonInfo(
    _ request: MovieService_GetPersonInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetPersonInfoRequest, MovieService_GetPersonInfoResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetPersonInfo",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPersonInfoInterceptors() ?? []
    )
  }

  /// Unary call to GetPersonsInfo
  ///
  /// - Parameters:
  ///   - request: Request to send to GetPersonsInfo.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getPersonsInfo(
    _ request: MovieService_GetPersonsInfoRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetPersonsInfoRequest, MovieService_GetPersonsInfoResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetPersonsInfo",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetPersonsInfoInterceptors() ?? []
    )
  }

  /// Unary call to GetDownloadableMovies
  ///
  /// - Parameters:
  ///   - request: Request to send to GetDownloadableMovies.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getDownloadableMovies(
    _ request: MovieService_GetDownloadableMoviesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetDownloadableMoviesRequest, MovieService_GetDownloadableMoviesResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetDownloadableMovies",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetDownloadableMoviesInterceptors() ?? []
    )
  }

  /// Unary call to Rate
  ///
  /// - Parameters:
  ///   - request: Request to send to Rate.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func rate(
    _ request: MovieService_RateRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_RateRequest, MovieService_RateResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/Rate",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRateInterceptors() ?? []
    )
  }

  /// Unary call to GetCollections
  ///
  /// - Parameters:
  ///   - request: Request to send to GetCollections.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getCollections(
    _ request: MovieService_GetCollectionsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetCollectionsRequest, MovieService_GetCollectionsResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetCollections",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetCollectionsInterceptors() ?? []
    )
  }

  /// Unary call to AddFavoriteMovie
  ///
  /// - Parameters:
  ///   - request: Request to send to AddFavoriteMovie.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func addFavoriteMovie(
    _ request: MovieService_AddFavoriteMovieRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_AddFavoriteMovieRequest, MovieService_AddFavoriteMovieResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/AddFavoriteMovie",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeAddFavoriteMovieInterceptors() ?? []
    )
  }

  /// Unary call to RemoveFavoriteMovie
  ///
  /// - Parameters:
  ///   - request: Request to send to RemoveFavoriteMovie.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func removeFavoriteMovie(
    _ request: MovieService_RemoveFavoriteMovieRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_RemoveFavoriteMovieRequest, MovieService_RemoveFavoriteMovieResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/RemoveFavoriteMovie",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeRemoveFavoriteMovieInterceptors() ?? []
    )
  }

  /// Unary call to PostComment
  ///
  /// - Parameters:
  ///   - request: Request to send to PostComment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func postComment(
    _ request: MovieService_PostCommentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_PostCommentRequest, MovieService_PostCommentResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/PostComment",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makePostCommentInterceptors() ?? []
    )
  }

  /// Unary call to EditComment
  ///
  /// - Parameters:
  ///   - request: Request to send to EditComment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func editComment(
    _ request: MovieService_EditCommentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_EditCommentRequest, MovieService_EditCommentResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/EditComment",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeEditCommentInterceptors() ?? []
    )
  }

  /// Unary call to DeleteComment
  ///
  /// - Parameters:
  ///   - request: Request to send to DeleteComment.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func deleteComment(
    _ request: MovieService_DeleteCommentRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_DeleteCommentRequest, MovieService_DeleteCommentResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/DeleteComment",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeDeleteCommentInterceptors() ?? []
    )
  }

  /// Unary call to GetFilters
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFilters.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getFilters(
    _ request: MovieService_GetFiltersRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetFiltersRequest, MovieService_GetFiltersResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetFilters",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFiltersInterceptors() ?? []
    )
  }

  /// Unary call to GetFilteredMovies
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFilteredMovies.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getFilteredMovies(
    _ request: MovieService_GetFilteredMoviesRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetFilteredMoviesRequest, MovieService_GetFilteredMoviesResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetFilteredMovies",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFilteredMoviesInterceptors() ?? []
    )
  }

  /// Unary call to GetFilterOption
  ///
  /// - Parameters:
  ///   - request: Request to send to GetFilterOption.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getFilterOption(
    _ request: MovieService_GetFilterOptionRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetFilterOptionRequest, MovieService_GetFilterOptionResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetFilterOption",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetFilterOptionInterceptors() ?? []
    )
  }

  /// Unary call to NotifyMovieRelease
  ///
  /// - Parameters:
  ///   - request: Request to send to NotifyMovieRelease.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func notifyMovieRelease(
    _ request: MovieService_NotifyMovieReleaseRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_NotifyMovieReleaseRequest, MovieService_NotifyMovieReleaseResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/NotifyMovieRelease",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeNotifyMovieReleaseInterceptors() ?? []
    )
  }

  /// Unary call to GetRecommendations
  ///
  /// - Parameters:
  ///   - request: Request to send to GetRecommendations.
  ///   - callOptions: Call options.
  /// - Returns: A `UnaryCall` with futures for the metadata, status and response.
  internal func getRecommendations(
    _ request: MovieService_GetRecommendationsRequest,
    callOptions: CallOptions? = nil
  ) -> UnaryCall<MovieService_GetRecommendationsRequest, MovieService_GetRecommendationsResponse> {
    return self.makeUnaryCall(
      path: "/movie_service.MovieService/GetRecommendations",
      request: request,
      callOptions: callOptions ?? self.defaultCallOptions,
      interceptors: self.interceptors?.makeGetRecommendationsInterceptors() ?? []
    )
  }
}

internal protocol MovieService_MovieServiceClientInterceptorFactoryProtocol {

  /// - Returns: Interceptors to use when invoking 'getPromoBanners'.
  func makeGetPromoBannersInterceptors() -> [ClientInterceptor<MovieService_GetPromoBannersRequest, MovieService_GetPromoBannersResponse>]

  /// - Returns: Interceptors to use when invoking 'getPremiereBanners'.
  func makeGetPremiereBannersInterceptors() -> [ClientInterceptor<MovieService_GetPremiereBannersRequest, MovieService_GetPremiereBannersResponse>]

  /// - Returns: Interceptors to use when invoking 'getGenreMovies'.
  func makeGetGenreMoviesInterceptors() -> [ClientInterceptor<MovieService_GetGenreMoviesRequest, MovieService_GetGenreMoviesResponse>]

  /// - Returns: Interceptors to use when invoking 'getSubgenreMovies'.
  func makeGetSubgenreMoviesInterceptors() -> [ClientInterceptor<MovieService_GetSubgenreMoviesRequest, MovieService_GetSubgenreMoviesResponse>]

  /// - Returns: Interceptors to use when invoking 'getMovieInfo'.
  func makeGetMovieInfoInterceptors() -> [ClientInterceptor<MovieService_GetMovieInfoRequest, MovieService_GetMovieInfoResponse>]

  /// - Returns: Interceptors to use when invoking 'getLink'.
  func makeGetLinkInterceptors() -> [ClientInterceptor<MovieService_GetLinkRequest, MovieService_GetLinkResponse>]

  /// - Returns: Interceptors to use when invoking 'getPremiereMovies'.
  func makeGetPremiereMoviesInterceptors() -> [ClientInterceptor<MovieService_GetPremiereMoviesRequest, MovieService_GetPremiereMoviesResponse>]

  /// - Returns: Interceptors to use when invoking 'getPurchasedMovies'.
  func makeGetPurchasedMoviesInterceptors() -> [ClientInterceptor<MovieService_GetPurchasedMoviesRequest, MovieService_GetPurchasedMoviesResponse>]

  /// - Returns: Interceptors to use when invoking 'getConfiguration'.
  func makeGetConfigurationInterceptors() -> [ClientInterceptor<MovieService_GetConfigurationRequest, MovieService_GetConfigurationResponse>]

  /// - Returns: Interceptors to use when invoking 'getRecommendedMovies'.
  func makeGetRecommendedMoviesInterceptors() -> [ClientInterceptor<MovieService_GetRecommendedMoviesRequest, MovieService_GetRecommendedMoviesResponse>]

  /// - Returns: Interceptors to use when invoking 'getCollectionMovies'.
  func makeGetCollectionMoviesInterceptors() -> [ClientInterceptor<MovieService_GetCollectionMoviesRequest, MovieService_GetCollectionMoviesResponse>]

  /// - Returns: Interceptors to use when invoking 'getWatchList'.
  func makeGetWatchListInterceptors() -> [ClientInterceptor<MovieService_GetWatchListRequest, MovieService_GetWatchListResponse>]

  /// - Returns: Interceptors to use when invoking 'setWatchInfo'.
  func makeSetWatchInfoInterceptors() -> [ClientInterceptor<MovieService_SetWatchInfoRequest, MovieService_SetWatchInfoResponse>]

  /// - Returns: Interceptors to use when invoking 'clearWatchInfo'.
  func makeClearWatchInfoInterceptors() -> [ClientInterceptor<MovieService_ClearWatchInfoRequest, MovieService_ClearWatchInfoResponse>]

  /// - Returns: Interceptors to use when invoking 'getFavoriteMovies'.
  func makeGetFavoriteMoviesInterceptors() -> [ClientInterceptor<MovieService_GetFavoriteMoviesRequest, MovieService_GetFavoriteMoviesResponse>]

  /// - Returns: Interceptors to use when invoking 'getPersonInfo'.
  func makeGetPersonInfoInterceptors() -> [ClientInterceptor<MovieService_GetPersonInfoRequest, MovieService_GetPersonInfoResponse>]

  /// - Returns: Interceptors to use when invoking 'getPersonsInfo'.
  func makeGetPersonsInfoInterceptors() -> [ClientInterceptor<MovieService_GetPersonsInfoRequest, MovieService_GetPersonsInfoResponse>]

  /// - Returns: Interceptors to use when invoking 'getDownloadableMovies'.
  func makeGetDownloadableMoviesInterceptors() -> [ClientInterceptor<MovieService_GetDownloadableMoviesRequest, MovieService_GetDownloadableMoviesResponse>]

  /// - Returns: Interceptors to use when invoking 'rate'.
  func makeRateInterceptors() -> [ClientInterceptor<MovieService_RateRequest, MovieService_RateResponse>]

  /// - Returns: Interceptors to use when invoking 'getCollections'.
  func makeGetCollectionsInterceptors() -> [ClientInterceptor<MovieService_GetCollectionsRequest, MovieService_GetCollectionsResponse>]

  /// - Returns: Interceptors to use when invoking 'addFavoriteMovie'.
  func makeAddFavoriteMovieInterceptors() -> [ClientInterceptor<MovieService_AddFavoriteMovieRequest, MovieService_AddFavoriteMovieResponse>]

  /// - Returns: Interceptors to use when invoking 'removeFavoriteMovie'.
  func makeRemoveFavoriteMovieInterceptors() -> [ClientInterceptor<MovieService_RemoveFavoriteMovieRequest, MovieService_RemoveFavoriteMovieResponse>]

  /// - Returns: Interceptors to use when invoking 'postComment'.
  func makePostCommentInterceptors() -> [ClientInterceptor<MovieService_PostCommentRequest, MovieService_PostCommentResponse>]

  /// - Returns: Interceptors to use when invoking 'editComment'.
  func makeEditCommentInterceptors() -> [ClientInterceptor<MovieService_EditCommentRequest, MovieService_EditCommentResponse>]

  /// - Returns: Interceptors to use when invoking 'deleteComment'.
  func makeDeleteCommentInterceptors() -> [ClientInterceptor<MovieService_DeleteCommentRequest, MovieService_DeleteCommentResponse>]

  /// - Returns: Interceptors to use when invoking 'getFilters'.
  func makeGetFiltersInterceptors() -> [ClientInterceptor<MovieService_GetFiltersRequest, MovieService_GetFiltersResponse>]

  /// - Returns: Interceptors to use when invoking 'getFilteredMovies'.
  func makeGetFilteredMoviesInterceptors() -> [ClientInterceptor<MovieService_GetFilteredMoviesRequest, MovieService_GetFilteredMoviesResponse>]

  /// - Returns: Interceptors to use when invoking 'getFilterOption'.
  func makeGetFilterOptionInterceptors() -> [ClientInterceptor<MovieService_GetFilterOptionRequest, MovieService_GetFilterOptionResponse>]

  /// - Returns: Interceptors to use when invoking 'notifyMovieRelease'.
  func makeNotifyMovieReleaseInterceptors() -> [ClientInterceptor<MovieService_NotifyMovieReleaseRequest, MovieService_NotifyMovieReleaseResponse>]

  /// - Returns: Interceptors to use when invoking 'getRecommendations'.
  func makeGetRecommendationsInterceptors() -> [ClientInterceptor<MovieService_GetRecommendationsRequest, MovieService_GetRecommendationsResponse>]
}

internal final class MovieService_MovieServiceClient: MovieService_MovieServiceClientProtocol {
  internal let channel: GRPCChannel
  internal var defaultCallOptions: CallOptions
  internal var interceptors: MovieService_MovieServiceClientInterceptorFactoryProtocol?

  /// Creates a client for the movie_service.MovieService service.
  ///
  /// - Parameters:
  ///   - channel: `GRPCChannel` to the service host.
  ///   - defaultCallOptions: Options to use for each service call if the user doesn't provide them.
  ///   - interceptors: A factory providing interceptors for each RPC.
  internal init(
    channel: GRPCChannel,
    defaultCallOptions: CallOptions = CallOptions(),
    interceptors: MovieService_MovieServiceClientInterceptorFactoryProtocol? = nil
  ) {
    self.channel = channel
    self.defaultCallOptions = defaultCallOptions
    self.interceptors = interceptors
  }
}

